
import os
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ConversationHandler, CallbackContext

# استدعاء التوكن من Secrets
TOKEN = os.getenv("TOKEN")

# التحقق إذا التوكن موجود
if not TOKEN:
    raise ValueError("التوكن غير موجود. تأكد من إضافته في Secrets.")

# الحسابات المصرح لها (اسم المستخدم وكلمة المرور)
accounts = {
    "user1": "pass123",
    "user2": "qwerty456",
    "client3": "secret789"
}

# مراحل المحادثة
ASK_USERNAME, ASK_PASSWORD = range(2)

# أوامر البوت
async def start(update: Update, context: CallbackContext) -> None:
    message = """
مرحباً بك في بوت جميع الاختراقات ، لقد تم تطويري من قبل دولة الهكر.
العديد من الميزات، وللحصول على حساب في البوت، قم بالتواصل مع المطور.
المطور : @LML15
"""
    await update.message.reply_text(message)

async def login(update: Update, context: CallbackContext) -> int:
    await update.message.reply_text("🔐 يرجى إدخال اسم المستخدم:")
    return ASK_USERNAME

async def check_username(update: Update, context: CallbackContext) -> int:
    username = update.message.text.strip()
    if username in accounts:
        context.user_data["username"] = username
        await update.message.reply_text("✅ اسم المستخدم صحيح! \nالآن، يرجى إدخال كلمة المرور:")
        return ASK_PASSWORD
    else:
        await update.message.reply_text("❌ لم يتم إيجاد هذا الحساب.")
        return ConversationHandler.END

async def check_password(update: Update, context: CallbackContext) -> int:
    password = update.message.text.strip()
    username = context.user_data.get("username")

    if accounts.get(username) == password:
        await update.message.reply_text(f"🎉 تم تسجيل الدخول بنجاح، مرحبًا {username}!")
    else:
        await update.message.reply_text("❌ كلمة المرور غير صحيحة.")
    
    return ConversationHandler.END

async def cancel(update: Update, context: CallbackContext) -> int:
    await update.message.reply_text("🚫 تم إلغاء العملية.")
    return ConversationHandler.END

# إعداد البوت
def main() -> None:
    application = Application.builder().token(TOKEN).build()

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("login", login)],
        states={
            ASK_USERNAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, check_username)],
            ASK_PASSWORD: [MessageHandler(filters.TEXT & ~filters.COMMAND, check_password)],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )

    application.add_handler(CommandHandler("start", start))
    application.add_handler(conv_handler)

    application.run_polling()

if __name__ == "__main__":
    main()
